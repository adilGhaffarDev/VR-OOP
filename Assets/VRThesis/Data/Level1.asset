%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 14f18efdcb4fc46d1afe304d195fc1c0, type: 3}
  m_Name: Level1
  m_EditorClassIdentifier: 
  _startLevelText:
    _speeches: []
  _errorLevelText:
    _speeches:
    - Wrong Answer, Try Again!
  _endLevelText:
    _speeches:
    - Good Job!
  _questions:
  - _options:
    - tree
    - 2
    - =
    _answer: tree=2
    _action: 
    _actor: 
    _objectsToBeInstantiated:
    - _prefab: {fileID: 6810202300047658965, guid: 38b3027f95c904abeb0bedcd81224a6b,
        type: 3}
      _position: {x: -9, y: -3, z: 15}
      _scale: {x: 2.5, y: 2.5, z: 2.5}
      _rotation: {x: 0, y: 0, z: 0}
    - _prefab: {fileID: 6810202300047658965, guid: 38b3027f95c904abeb0bedcd81224a6b,
        type: 3}
      _position: {x: 2, y: -3, z: 15}
      _scale: {x: 2.5, y: 2.5, z: 2.5}
      _rotation: {x: 0, y: 0, z: 0}
    _questionSpeech:
      _speeches:
      - Hi! I'm Bob and I'll be helping you with your OOP assignment! Click on me
        to see your exercises!
      - Through the next two levels, use your knowledge about variables to add trees
        and houses to the scene .
      - This is level 1, and you will practice your variables concept. Start by adding
        some trees by clicking the options above me
  - _options:
    - =
    - house
    - 2
    _answer: house=2
    _action: 
    _actor: 
    _objectsToBeInstantiated:
    - _prefab: {fileID: 5805590077098911803, guid: 36727a51635624fc58643222f2c33dce,
        type: 3}
      _position: {x: 0, y: -3, z: 21}
      _scale: {x: 2, y: 2, z: 2}
      _rotation: {x: 0, y: -172, z: 0}
    - _prefab: {fileID: 5805590077098911803, guid: 36727a51635624fc58643222f2c33dce,
        type: 3}
      _position: {x: 17, y: -3, z: 21}
      _scale: {x: 2, y: 2, z: 2}
      _rotation: {x: 0, y: -172, z: 0}
    _questionSpeech:
      _speeches:
      - Good Job!. Your task now is to instantiate 2 houses by clicking on the options
        above in the right order.
  - _options:
    - new
    - fox
    - =
    - ' Fox()'
    _answer: fox=new Fox()
    _action: 
    _actor: 
    _objectsToBeInstantiated:
    - _prefab: {fileID: 8582575390685558079, guid: d658844a52226467ebfe9c964ab1f4ec,
        type: 3}
      _position: {x: -10, y: -3, z: 12}
      _scale: {x: 5, y: 5, z: 5}
      _rotation: {x: 0, y: -265, z: 0}
    _questionSpeech:
      _speeches:
      - Good Job!. Your task is to instantiate a fox from the class Fox(), use the
        keyword 'new'
  - _options:
    - fox
    - walk()
    - .
    - =
    _answer: fox.walk()
    _action: WalkNoTarget
    _actor: fox1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Great work!. Your task now is to get your fox to walk using the walk() behavior!
  - _options:
    - fox
    - walk()
    - .
    - die()
    _answer: fox.die()
    _action: Die
    _actor: fox1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Seems like you're going somewhere here! Your fox is walking with no destination.
        Your task is to kill the fox using the behavior 'die()'
  - _options:
    - fox
    - destroy
    - (
    - )
    _answer: destroy(fox)
    _action: Destroy
    _actor: fox1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Great! Your fox is dead, now remove it from the environment!. You can do so
        by passing the object 'fox' as a parameter to the function 'destroy'
  - _options:
    - new
    - fox
    - =
    - ' Fox()'
    _answer: fox=new Fox()
    _action: 
    _actor: 
    _objectsToBeInstantiated:
    - _prefab: {fileID: 8582575390685558079, guid: d658844a52226467ebfe9c964ab1f4ec,
        type: 3}
      _position: {x: -10, y: -3, z: 12}
      _scale: {x: 5, y: 5, z: 5}
      _rotation: {x: 0, y: -265, z: 0}
    _questionSpeech:
      _speeches:
      - Good Job!. Your task is to instantiate a fox again from the class Fox(), use
        the keyword 'new'
  - _options:
    - =
    - get_Position()
    - tree2
    - .
    - position2
    _answer: position2=tree2.get_Position()
    _action: get_Position
    _actor: tree2
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Good! The fox is here!Let's get it to walk from the tree near you to the other
        tree. first let's get the position of the second tree and store it in the
        variable 'position2'.
  - _options:
    - =
    - get_Position()
    - tree1
    - .
    - position1
    _answer: position1=tree1.get_Position()
    _action: get_Position
    _actor: tree1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Good! position2 variable holds the position of the second tree. let's do the
        same for tree1 and get its position in the variable 'position1'
  - _options:
    - tree2
    - .
    - set_Position(
    - )
    - 5
    _answer: tree2.set_Position(5)
    _action: set_Position
    _actor: tree2
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Good! let's practice the setters now!. Use the setter set_Position(int position)
        to change the location of tree 2 and put it a little bit farther from tree
        1
  - _options:
    - fox
    - walk(
    - .
    - position2)
    - position1,
    _answer: fox.walk(position1,position2)
    _action: WalkTowardsTarget
    _actor: fox1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Great! tree2 is now repositioned!. use the walk() behavior of the fox and
        the variables position 1 and position 2 as parameters to make your fox walk
        from tree1 to tree2
  - _options:
    - fox
    - destroy
    - (
    - )
    _answer: destroy(fox)
    _action: Destroy
    _actor: fox1
    _objectsToBeInstantiated: []
    _questionSpeech:
      _speeches:
      - Now remove it from the environment!. You can do so by passing the object 'fox'
        as a parameter to the function 'destroy'
  _exercise:
    _excerciseIntro:
      _speeches: []
    _excerciseQuestions: []
